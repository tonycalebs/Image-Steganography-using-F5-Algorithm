
import steg.JpegEncoder;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static net.f5.Extract.extract;
import net.f5.image.Bmp;
import sun.security.util.Password;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author CALEB
 */
public class StegoMain extends javax.swing.JFrame {
    String dir = "";
    String dir1 = "";
    BufferedImage img = null;
    String [] argh;
    File file, outFile;
    String fdir="";
    
    /**
     * Creates new form StegoMain
     */
    public StegoMain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        desktopPane.setBackground(new java.awt.Color(0, 102, 0));
        desktopPane.add(jLabel1);
        jLabel1.setBounds(70, 10, 530, 390);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        jMenuItem1.setText("Password");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem1);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Encrypt");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Decrypt");
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("About");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("About Program");
        cutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(cutMenuItem);

        menuBar.add(editMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(desktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(desktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        JFileChooser fc = new JFileChooser();
    if(fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
        
           try {
               File f = fc.getSelectedFile();
               img = ImageIO.read(fc.getSelectedFile()); //it must be an image file, otherwise you'll get an exception
            dir1 = fc.getCurrentDirectory().toString();
            dir = fc.getCurrentDirectory().toString()+"\\"+fc.getName(f);
            this.jLabel1.setIcon(new ImageIcon(img));
                 } catch (IOException ex) { 
                Logger.getLogger(StegoMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        
       
        
    }
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed

        String p = Pasword.pass();
      
        if (p=="")
        {
            JOptionPane.showMessageDialog(null,"Enter Password first");
        }else{
                 
            JFileChooser fc = new JFileChooser();
    if(fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
                   
            File f = fc.getSelectedFile();
            fdir = fc.getCurrentDirectory().toString()+"\\"+fc.getName(f);
            
    }    
           
        Image image = null;
        FileOutputStream dataOut = null;
        
        JpegEncoder jpg;
        int i, Quality = 80;
        
        boolean haveInputImage = false;
        String embFileName = fdir;
        
        String password = Pasword.pass();
       
        String comment = "This program is designed by Musa Mariam and Uluoso Rachael";
        //String inFileName = null;
        String inFileName = dir;
        //String outFileName = null;
        String outFileName = dir1+"\\NewImage.jpg";
        
        outFile = new File(outFileName);
        i = 1;
        while (outFile.exists()) {
            outFile = new File(outFileName.substring(0, outFileName.lastIndexOf(".")) + i++ + ".jpg");
            if (i > 100) {
                System.exit(0);
            }
        }
        file = new File(inFileName);
        if (file.exists()) {
            try {
                dataOut = new FileOutputStream(outFile);
            } catch (final IOException e) {
            }
            if (inFileName.endsWith(".bmp")) {
                final Bmp bmp = new Bmp(inFileName);
                image = bmp.getImage();
            } else {
                image = Toolkit.getDefaultToolkit().getImage(inFileName);
            }
            jpg = new JpegEncoder(image, Quality, dataOut, comment);
            try {
                if (embFileName == null) {
                    jpg.Compress();
                } else {
                    jpg.Compress(new FileInputStream(embFileName), password);
                }
            } catch (final Exception e) {
                e.printStackTrace();
            }
            try {
                dataOut.close();
            } catch (final IOException e) {
            }
        } else {
            System.out.println("I couldn't find " + inFileName + ". Is it in another directory?");
        }
        }
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
 if (Pasword.pass().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Enter Password first");
        }else{
        
        File f; // carrier file

    byte[] carrier; // carrier data

    int[] coeff; // dct values

    FileOutputStream fos; // embedded file (output file)

    String embFileName = dir1+"\\output.txt"; // output file name

    String password = Pasword.pass();

    byte[] deZigZag = {
            0, 1, 5, 6, 14, 15, 27, 28, 2, 4, 7, 13, 16, 26, 29, 42, 3, 8, 12, 17, 25, 30, 41, 43, 9, 11, 18, 24, 31,
            40, 44, 53, 10, 19, 23, 32, 39, 45, 52, 54, 20, 22, 33, 38, 46, 51, 55, 60, 21, 34, 37, 47, 50, 56, 59, 61,
            35, 36, 48, 49, 57, 58, 62, 63 };
    
    final FileInputStream fis;
        
        f = new File(dir);
        try {
            fis = new FileInputStream(f);
            fos = new FileOutputStream(new File(embFileName));
            extract(fis, (int) f.length(), fos, password);
        } catch (IOException ex) {
            Logger.getLogger(StegoMain.class.getName()).log(Level.SEVERE, null, ex);
        }
 }
    
    }//GEN-LAST:event_saveAsMenuItemActionPerformed

    private void cutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutMenuItemActionPerformed
        About.main(argh);
    }//GEN-LAST:event_cutMenuItemActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new Pasword().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StegoMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StegoMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StegoMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StegoMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StegoMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables

}
